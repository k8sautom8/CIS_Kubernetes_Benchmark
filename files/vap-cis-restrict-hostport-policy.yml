# Validating Admission Policy
# Name: Restrict Container hostPort
#	Workloads (like pod, deployment, etc) that contain a container with hostport. 
#	The problem that arises is that if the scale of your workload is larger than the number of nodes in your Kubernetes cluster, the deployment fails. 
#	And any two workloads that specify the same HostPort cannot be deployed to the same node. 
#	In addition, if the host where your pods are running becomes unavailable, Kubernetes reschedules the pods to different nodes. 
#	Thus, if the IP address for your workload changes, external clients of your application will lose access to the pod. 
#	The same thing happens when you restart your pods â€” Kubernetes reschedules them to a different node if available. 
# Author: Abhijit Jadhav
# Docs: https://hub.armosec.io/docs/c-0044
# Severity: Medium

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: "vap-cis-restrict-hostport-policy"
spec:
  failurePolicy: Fail
  paramKind:
    apiVersion: k8sautom8.com/v1
    kind: ValidationParameters
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["pods"]
      - apiGroups: ["apps"]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
      - apiGroups: ["batch"]
        apiVersions: ["v1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["jobs", "cronjobs"]
  validations:
    - expression: "object.kind != 'Pod' || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.containers) || \
                   (object.spec.containers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All Containers in Pod must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "object.kind != 'Pod' || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.initContainers) || \
                   (object.spec.initContainers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All initContainers in Pod must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "object.kind != 'Pod' || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.ephemeralContainers) || \
                   (object.spec.ephemeralContainers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All ephemeralContainers in Pod must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.template.spec.containers) || \
                   (object.spec.template.spec.containers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All containers in Deployment, Replicaset, Daemonset and Statefulset must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.template.spec.initContainers) || \
                   (object.spec.template.spec.initContainers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All initContainers in Deployment, Replicaset, Daemonset and Statefulset must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.template.spec.ephemeralContainers) || \
                   (object.spec.template.spec.ephemeralContainers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All ephemeralContainers in Deployment, Replicaset, Daemonset and Statefulset must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "object.kind != 'CronJob' || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.jobTemplate.spec.template.spec.containers) || \
                   (object.spec.jobTemplate.spec.template.spec.containers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All Containers in CronJob must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "object.kind != 'CronJob' || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.jobTemplate.spec.template.spec.initContainers) || \
                   (object.spec.jobTemplate.spec.template.spec.initContainers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All initContainers in CronJob must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

    - expression: "object.kind != 'CronJob' || \
                   object.metadata.namespace in params.spec.excludeSystemNamespaces || \
                   !has(object.spec.jobTemplate.spec.template.spec.ephemeralContainers) || \
                   (object.spec.jobTemplate.spec.template.spec.ephemeralContainers.all(container,!has(container.ports) ||  \
                   container.ports.all(port,!has(port.hostPort) || \
                   port.hostPort == 0)))"
      message: "All ephemeralContainers in CronJob must NOT set port.hostPort. Please refer: https://hub.armosec.io/docs/c-0044"

