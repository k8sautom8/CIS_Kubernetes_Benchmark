# Validating Admission Policy
# Name: Non-root containers
#       Container engines allow containers to run applications as a non-root user with non-root group membership.
#       Typically, this non-default setting is configured when the container image is built.
#       Alternatively, Kubernetes can load containers into a Pod with SecurityContext:runAsUser specifying a non-zero user.
#       While the runAsUser directive effectively forces non-root execution at deployment,
#       NSA and CISA encourage developers to build container applications to execute as a non-root user.
#       Having non-root execution integrated at build time provides better assurance that applications will function correctly without root privileges.
# Author: Abhijit Jadhav
# Docs: https://hub.armosec.io/docs/c-0013
# Severity: Medium

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: "vap-cis-enforce-runasnonroot-policy-binding"
spec:
  policyName: "vap-cis-enforce-runasnonroot-policy"
  validationActions: [Deny]
  paramRef:
    name: exclude-system-namespace-list
    parameterNotFoundAction: "Deny"
  matchResources: {}

### The namespace exclusion logic now moved into CRD, Parameter and embeded in Policy. This gives more flexibility on managing and maintaing common exclusions
### You can still exclude additional app namespaces which are specific to the policy exclusion using following matchExpressions
###
# matchResources:
#   namespaceSelector:
#     matchExpressions:
#     - key: kubernetes.io/metadata.name
#       operator: NotIn
#       values:
#       - app-one-namespace
#       - app-two-namespace
###
### OR using labels
###
# matchResources:
#   namespaceSelector:
#     matchExpressions:
#       namsSpaceSelector:
#         matchLabels:
#           environment: prod
