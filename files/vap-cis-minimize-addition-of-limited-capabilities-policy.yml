# Validating Admission Policy
# Name: Minimize the admission of containers with added capabilities
#	Containers run with a default set of capabilities as assigned by the Container Runtime. 
#	Capabilities outside this set can be added to containers which could expose them to risks of container breakout attacks.
# Author: Abhijit Jadhav
# Docs: https://hub.armosec.io/docs/c-0200
# Severity: Medium

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: "vap-cis-minimize-addition-of-limited-capabilities-policy"
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups: [""]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["pods"]
    - apiGroups: ["apps"]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    - apiGroups: ["batch"]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["jobs", "cronjobs"]
  validations:
    - expression: "object.kind != 'Pod' || \
                   !has(object.spec.containers) || \
                   (object.spec.containers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "Any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"
    
    - expression: "object.kind != 'Pod' || \
                   !has(object.spec.initContainers) || \
                   (object.spec.initContainers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "Any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"
    
    - expression: "object.kind != 'Pod' || \
                   !has(object.spec.ephemeralContainers) || \
                   (object.spec.ephemeralContainers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "Any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"

    - expression: "['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) || \
                   !has(object.spec.template.spec.containers) || \
                   (object.spec.template.spec.containers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "Any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"
    
    - expression: "['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) || \
                   !has(object.spec.template.spec.initContainers) || \
                   (object.spec.template.spec.initContainers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "Any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"
    
    - expression: "['Deployment','ReplicaSet','DaemonSet','StatefulSet','Job'].all(kind, object.kind != kind) || \
                   !has(object.spec.template.spec.ephemeralContainers) || \
                   (object.spec.template.spec.ephemeralContainers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "Any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"

    - expression: "object.kind != 'CronJob' || \
                   !has(object.spec.jobTemplate.spec.template.spec.containers) || \
                   (object.spec.jobTemplate.spec.template.spec.containers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "In CronJob containers any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, KILL, \
                MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"
    
    - expression: "object.kind != 'CronJob' || \
                   !has(object.spec.jobTemplate.spec.template.spec.initContainers) || \
                   (object.spec.jobTemplate.spec.template.spec.initContainers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "In CronJob initContainers any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, \
                KILL, MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"
    
    - expression: "object.kind != 'CronJob' || \
                   !has(object.spec.jobTemplate.spec.template.spec.ephemeralContainers) || \
                   (object.spec.jobTemplate.spec.template.spec.ephemeralContainers.all(container, !has(container.securityContext) || \
                   !has(container.securityContext.capabilities) || \
                   !has(container.securityContext.capabilities.add) || \
                   container.securityContext.capabilities.add.all(capability, \
                   ['AUDIT_WRITE','CHOWN','DAC_OVERRIDE','FOWNER','FSETID','KILL','MKNOD','NET_BIND_SERVICE','SETFCAP','SETGID','SETPCAP','SETUID','SYS_CHROOT']. \
                   exists(secureCapability, secureCapability == capability))))"
      message: "In CronJob ephemeralContainers any capabilities added beyond the allowed list (AUDIT_WRITE, CHOWN, DAC_OVERRIDE, FOWNER, FSETID, \
                KILL, MKNOD, NET_BIND_SERVICE, SETFCAP, SETGID, SETPCAP, SETUID, SYS_CHROOT) are disallowed. Please refer: https://hub.armosec.io/docs/c-0200"

